#############################################################################
# Makefile for building: vegactrl
# Generated by qmake (2.01a) (Qt 4.2.1) on: dim. oct. 25 00:00:20 2009
# Project:  vegactrl.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile vegactrl.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQT3_SUPPORT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT  $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtSql -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = -lQtSql -lQtNetwork ./librudeconfig.a $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = alarmes.cpp \
		conf.cpp \
		crm4.cpp \
		crm4hearingstate.cpp \
		debug.cpp \
		device.cpp \
		groups.cpp \
		idlestate.cpp \
		ini.cpp \
		main.cpp \
		messages.cpp \
		misc.cpp \
		mixer.cpp \
		port.cpp \
		radiostate.cpp \
		reload.cpp \
		switch.cpp \
		vega_control.cpp 
OBJECTS       = alarmes.o \
		conf.o \
		crm4.o \
		crm4hearingstate.o \
		debug.o \
		device.o \
		groups.o \
		idlestate.o \
		ini.o \
		main.o \
		messages.o \
		misc.o \
		mixer.o \
		port.o \
		radiostate.o \
		reload.o \
		switch.o \
		vega_control.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		vegactrl.pro
QMAKE_TARGET  = vegactrl
DESTDIR       = 
TARGET        = vegactrl

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: vegactrl.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf
	$(QMAKE) -unix -o Makefile vegactrl.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile vegactrl.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/vegactrl1.0.0 || $(MKDIR) .tmp/vegactrl1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/vegactrl1.0.0/ && $(COPY_FILE) --parents alarmes.h conf.h const.h debug.h ini.h ixpci.h messages.h misc.h mixer.h switch.h .tmp/vegactrl1.0.0/ && $(COPY_FILE) --parents alarmes.cpp conf.cpp crm4.cpp crm4hearingstate.cpp debug.cpp device.cpp groups.cpp idlestate.cpp ini.cpp main.cpp messages.cpp misc.cpp mixer.cpp port.cpp radiostate.cpp reload.cpp switch.cpp vega_control.cpp .tmp/vegactrl1.0.0/ && (cd `dirname .tmp/vegactrl1.0.0` && $(TAR) vegactrl1.0.0.tar vegactrl1.0.0 && $(COMPRESS) vegactrl1.0.0.tar) && $(MOVE) `dirname .tmp/vegactrl1.0.0`/vegactrl1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/vegactrl1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/bin/moc-qt4:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

alarmes.o: alarmes.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o alarmes.o alarmes.cpp

conf.o: conf.cpp debug.h \
		const.h \
		conf.h \
		mixer.h \
		ini.h \
		misc.h \
		messages.h \
		alarmes.h \
		rude/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o conf.o conf.cpp

crm4.o: crm4.cpp debug.h \
		const.h \
		misc.h \
		messages.h \
		conf.h \
		mixer.h \
		rude/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o crm4.o crm4.cpp

crm4hearingstate.o: crm4hearingstate.cpp debug.h \
		const.h \
		conf.h \
		mixer.h \
		misc.h \
		messages.h \
		alarmes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o crm4hearingstate.o crm4hearingstate.cpp

debug.o: debug.cpp debug.h \
		const.h \
		alarmes.h \
		conf.h \
		mixer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug.o debug.cpp

device.o: device.cpp debug.h \
		const.h \
		conf.h \
		mixer.h \
		ini.h \
		messages.h \
		misc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o device.o device.cpp

groups.o: groups.cpp const.h \
		debug.h \
		conf.h \
		mixer.h \
		misc.h \
		messages.h \
		rude/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o groups.o groups.cpp

idlestate.o: idlestate.cpp const.h \
		conf.h \
		mixer.h \
		debug.h \
		misc.h \
		messages.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o idlestate.o idlestate.cpp

ini.o: ini.cpp debug.h \
		const.h \
		conf.h \
		mixer.h \
		ini.h \
		misc.h \
		messages.h \
		alarmes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ini.o ini.cpp

main.o: main.cpp ixpci.h \
		alarmes.h \
		debug.h \
		const.h \
		conf.h \
		mixer.h \
		ini.h \
		misc.h \
		messages.h \
		rude/config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

messages.o: messages.cpp misc.h \
		messages.h \
		const.h \
		conf.h \
		mixer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o messages.o messages.cpp

misc.o: misc.cpp ixpci.h \
		misc.h \
		messages.h \
		const.h \
		conf.h \
		mixer.h \
		debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o misc.o misc.cpp

mixer.o: mixer.cpp debug.h \
		const.h \
		conf.h \
		mixer.h \
		alarmes.h \
		messages.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mixer.o mixer.cpp

port.o: port.cpp debug.h \
		const.h \
		misc.h \
		messages.h \
		conf.h \
		mixer.h \
		alarmes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o port.o port.cpp

radiostate.o: radiostate.cpp ixpci.h \
		debug.h \
		const.h \
		conf.h \
		mixer.h \
		misc.h \
		messages.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o radiostate.o radiostate.cpp

reload.o: reload.cpp rude/config.h \
		ixpci.h \
		const.h \
		debug.h \
		conf.h \
		mixer.h \
		ini.h \
		misc.h \
		messages.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reload.o reload.cpp

switch.o: switch.cpp conf.h \
		const.h \
		mixer.h \
		switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o switch.o switch.cpp

vega_control.o: vega_control.cpp const.h \
		misc.h \
		messages.h \
		conf.h \
		mixer.h \
		debug.h \
		alarmes.h \
		switch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vega_control.o vega_control.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

